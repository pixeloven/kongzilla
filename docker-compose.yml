version: '3.9'

x-kong-config: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-off}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: ${KONG_PG_HOST:-kong-db}
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}

x-postgres-config: &postgres-env
  POSTGRES_DB: ${POSTGRES_DB:-kong}
  POSTGRES_USER: ${POSTGRES_USER:-kong}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kong}

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs

networks:
  kong-net:
    external: false

services:

  kong-db:
    image: postgres:9.5
    profiles: ["database", "migrations"]
    environment:
      <<: *postgres-env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    profiles: ["database", "migrations"]
    depends_on:
      - kong-db
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    image: kong:latest
    command: kong migrations up && kong migrations finish
    profiles: ["database", "migrations"]
    depends_on:
      - kong-db
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure

  kong-setup:
    build:
      context: ./setup
    image: "alpine:latest"
    profiles: ["setup"]
    networks:
      - kong-net

  kong-deck:
    image: "kong/deck"
    profiles: ["cli"]
    environment:
      DECK_KONG_ADDR: "http://kong:8001"
    networks:
      - kong-net
    volumes:
      - ./config:/opt/kong

  kong:
    image: kong:latest
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: "${KONG_ADMIN_ACCESS_LOG:-/dev/stdout}"
      KONG_ADMIN_ERROR_LOG: "${KONG_ADMIN_ERROR_LOG:-/dev/stderr}"
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_PROXY_ACCESS_LOG: "${KONG_PROXY_ACCESS_LOG:-/dev/stdout}"
      KONG_PROXY_ERROR_LOG: "${KONG_PROXY_ERROR_LOG:-/dev/stderr}"
      KONG_PREFIX: "${KONG_PREFIX:-/var/run/kong}"
      KONG_DECLARATIVE_CONFIG: "${KONG_DECLARATIVE_CONFIG:-/opt/kong/kong.yaml}"
    networks:
      - kong-net
    ports:
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:8000:8000/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges

  kong-dashboard:
    image: pantsel/konga
    profiles: ["database"]
    depends_on:
      - kong-db
    ports:
      - 1337:1337
    environment:
      TOKEN_SECRET: ${KONGA_NODE_ENV:-production}
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET:-kong}
      DB_ADAPTER: ${KONGA_DB_ADAPTER:-postgres}
      DB_HOST: ${KONGA_PG_HOST:-kong-db}
      DB_USER: ${KONGA_PG_USER:-konga}
      DB_PASSWORD: ${KONGA_PG_PASSWORD:-konga}
      DB_DATABASE: ${KONGA_PG_DATABASE:-konga}
    networks:
      - kong-net
